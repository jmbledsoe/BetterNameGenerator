@using System.Globalization;
@{
    string title = "Numberology";
    string description = GetDescription();
}

<!DOCTYPE html>
<html data-ng-app="nameApp" lang="en">
<head prefix="og: http://ogp.me/ns#">
    <meta charset="utf-8" />
    <title>@title</title>
    <meta name="description" content="@description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link href="@Fingerprint("/css/site.min.css")" rel="stylesheet" />

    <meta name="application-name" content="@title" />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="@title" />
    <meta name="twitter:description" content="@description" />
    <meta name="twitter:image" content="/img/logo.png" />
    <meta name="twitter:creator" content="@("@mkristensen")" />
    <meta name="twitter:site" content="@("@mkristensen")" />

    <meta property="og:title" content="@title" />
    <meta property="og:description" content="@description" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="@Request.Url.Scheme://@Request.Url.Host@Request.RawUrl" />
    <meta property="og:image" content="@Request.Url.Scheme://@Request.Url.Host/img/logo.png" />

    <link rel="apple-touch-icon" href="@Fingerprint("/img/logo.png")" />
    <link rel="shortcut icon" href="@Fingerprint("/img/icon.png")" />
</head>
<body>

    <header>
        <a href="/">
            <h1>@title</h1>
            <p>Numerology's brain dead cousin</p>
        </a>
    </header>

    <div role="main">
        <ng-view />
    </div>

    <script src="@Fingerprint("/Scripts/angular.min.js", "//ajax.googleapis.com/ajax/libs/angularjs/1.2.5/angular.min.js")"></script>
    <script src="@Fingerprint("/scripts/angular-route.min.js", "//ajax.googleapis.com/ajax/libs/angularjs/1.2.5/angular-route.min.js")"></script>
    <script src="@Fingerprint("/app/_output/combined.min.js")"></script>
</body>
</html>

@functions{
    private string Fingerprint(string rootRelativePath, string cdnPath = "")
    {
        if (!string.IsNullOrEmpty(cdnPath) && !Context.IsDebuggingEnabled)
        {
            return cdnPath;
        }

        if (HttpRuntime.Cache[rootRelativePath] == null)
        {
            string relative = VirtualPathUtility.ToAbsolute("~" + rootRelativePath);
            string absolute = Server.MapPath(relative);

            if (!File.Exists(absolute))
            {
                throw new FileNotFoundException("File not found", absolute);
            }

            DateTime date = File.GetLastWriteTime(absolute);
            int index = relative.LastIndexOf('/');

            string result = relative.Insert(index, "/v-" + date.Ticks);

            HttpRuntime.Cache.Insert(rootRelativePath, result, new System.Web.Caching.CacheDependency(absolute));
        }

        return HttpRuntime.Cache[rootRelativePath] as string;
    }

    private string GetDescription()
    {
        string name = Request.QueryString["name"];
        
        if (string.IsNullOrEmpty(name))
            return "Numberology helps you find a new, better and unique name";

        name = name.Split('-')[0];
        name = CultureInfo.InvariantCulture.TextInfo.ToTitleCase(name);

        return name + " got a new name. You need a new one too!";
    }
}